name: netcdf_pnetcdf_openmpi

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      CPPFLAGS: "-I/home/runner/openmpi/include -I/home/runner/hdf5/include -I/home/runner/netcdf/include -I/home/runner/pnetcdf/include"
      LDFLAGS: "-L/home/runner/openmpi/lib -L/home/runner/hdf5/lib -L/home/runner/netcdf/lib -L/home/runner/pnetcdf/lib"
      NETCDF_C_VERSION: v4.9.0
      NETCDF_FORTRAN_VERSION: v4.6.0
      OPENMPI_VERSION_MAJOR: 4.1
      OPENMPI_VERSION_PATCH: 4
      PNETCDF_VERSION: checkpoint.1.12.3
      HDF5_VERSION: hdf5_1_12_2
      FCFLAGS: "-fallow-argument-mismatch"
      FFLAGS: "-fallow-argument-mismatch"
    steps:
    - uses: actions/checkout@v3
    - name: Installs
      run: |
        sudo apt-get install doxygen graphviz wget gfortran libjpeg-dev libz-dev
    - name: cache-openmpi
      id: cache-openmpi
      uses: actions/cache@v3
      with:
        path: ~/openmpi
        key: openmpi-${{ runner.os }}-${{ env.OPENMPI_VERSION }}

    - name: build-openmpi
      if: steps.cache-openmpi.outputs.cache-hit != 'true'
      run: |
        wget https://download.open-mpi.org/release/open-mpi/v${{ env.OPENMPI_VERSION_MAJOR }}/openmpi-${{ env.OPENMPI_VERSION_MAJOR }}.${{ env.OPENMPI_VERSION_PATCH}}.tar.gz &> /dev/null
        tar -xzf openmpi-${{ env.OPENMPI_VERSION_MAJOR }}.${{ env.OPENMPI_VERSION_PATCH }}.tar.gz
        pushd openmpi-${{ env.OPENMPI_VERSION_MAJOR }}.${{ env.OPENMPI_VERSION_PATCH }}
        ./configure --prefix=/home/runner/openmpi
        make
        sudo make install
        popd
    - name: cache-hdf5
      id: cache-hdf5
      uses: actions/cache@v3
      with:
        path: ~/hdf5
        key: hdf5-${{ runner.os }}-${{ env.HDF5_VERSION }}-openmpi-${{ env.OPENMPI_VERSION_MAJOR }}.${{ env.OPENMPI_VERSION_PATCH }}

    - name: build-hdf5
      if: steps.cache-hdf5.outputs.cache-hit != 'true'
      uses: ./.github/actions/buildhdf5
      with:
        install_prefix: $HOME/hdf5
        enable_parallel: True
        hdf5_version: ${{ env.HDF5_VERSION }}
        mpi_path: /home/runner/openmpi

    - name: cache-netcdf
      id: cache-netcdf
      uses: actions/cache@v3
      with:
        path: ~/netcdf
        key: netcdf-${{ runner.os }}-${{ env.NETCDF_C_VERSION }}-${{ env.NETCDF_FORTRAN_VERSION }}-openmpi-${{ env.OPENMPI_VERSION_MAJOR }}.${{ env.OPENMPI_VERSION_PATCH }}-hdf5-${{ env.HDF5_VERSION }}

    - name: prep netcdf-c
      run: |
        export PATH=$HOME/openmpi/bin:$HOME/hdf5/bin:$PATH
        export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$HOME/hdf5/lib:/usr/lib"
        printenv >> $GITHUB_ENV
    - name: build-netcdf-c
      if: steps.cache-netcdf.outputs.cache-hit != 'true'
      uses: ./.github/actions/buildnetcdf
      with:
        netcdf_version: ${{ env.NETCDF_C_VERSION }}
        install_prefix: $HOME/netcdf

    - name: Setup tmate session
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3
#    - name: cache-netcdf-fortran
#      id: cache-netcdf-fortran
#      uses: actions/cache@v3
#      with:
#        path: ~/netcdf-fortran
#        key: netcdf-fortran-${{ runner.os }}-${{ env.NETCDF_FORTRAN_VERSION }}-openmpi-${{ env.OPENMPI_VERSION_MAJOR }}.${{ env.OPENMPI_VERSION_PATCH }}-hdf5-${{ env.HDF5_VERSION}}

    - name: Build NetCDF Fortran
      if: steps.cache-netcdf.outputs.cache-hit != 'true'
      uses: ./.github/actions/buildnetcdff
      with:
        netcdf_fortran_version: ${{ env.NETCDF_FORTRAN_VERSION }}
        install_prefix: $HOME/netcdf
        netcdf_c_path: $HOME/netcdf

    - name: cache-pnetcdf
      id: cache-pnetcdf
      uses: actions/cache@v3
      with:
        path: ~/pnetcdf
        key: pnetcdf-${{ runner.os }}-${{ env.PNETCDF_VERSION }}-openmpi-${{ env.OPENMPI_VERSION_MAJOR }}.${{ env.OPENMPI_VERSION_PATCH }}

    - name: Build PNetCDF
      if: steps.cache-pnetcdf.outputs.cache-hit != 'true'
      uses: ./.github/actions/buildpnetcdf
      with:
        pnetcdf_version: ${{ env.PNETCDF_VERSION }}
        install_prefix: $HOME/pnetcdf

    - name: Build ParallelIO with autotools
      uses: ./.github/actions/parallelio_autotools
      with:
        enable_fortran: True
        with_mpiexec: 'mpiexec --oversubscribe'
        parallelio_version: ${{ env.GITHUB_SHA }}
    - name: make check
      run: |
        cd $GITHUB_WORKSPACE/parallelio-src   
        make -j check
        make distclean
    - name: cmake build
      uses: ./.github/actions/parallelio_cmake
      with:
        parallelio_version: ${{ env.GITHUB_SHA }}
        with_pnetcdf: $HOME/pnetcdf
        with_netcdf: $HOME/netcdf-c
        with_netcdff: $HOME/netcdf-fortran
        enable_fortran: True
        install_prefix: $HOME/parallelio
        with_mpiexec: "/home/runner/openmpi/bin/mpiexec --oversubscribe"
    - name: run tests
      run: |
        pushd $GITHUB_WORKSPACE/build
        make tests VERBOSE=1
        ctest -VV
        popd
